#!/usr/bin/env ruby
# frozen_string_literal: true

require "sorbet-runtime"

begin
  T::Configuration.default_checked_level = :never
  # Suppresses call validation errors
  T::Configuration.call_validation_error_handler = ->(*) {}
  # Suppresses errors caused by T.cast, T.let, T.must, etc.
  T::Configuration.inline_type_error_handler = ->(*) {}
  # Suppresses errors caused by incorrect parameter ordering
  T::Configuration.sig_validation_error_handler = ->(*) {}
rescue
  # Need this rescue so that if another gem has
  # already set the checked level by the time we
  # get to it, we don't fail outright.
  nil
end

require_relative "../lib/ruby_lsp/internal"

require "optparse"

options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: ruby-lsp [options]"

  opts.on("--version", "Print ruby-lsp version") do
    puts RubyLsp::VERSION
    exit(0)
  end

  opts.on("--debug", "Launch the Ruby LSP with a debugger attached") do
    options[:debug] = true
  end

  opts.on("-h", "--help", "Print this help") do
    puts opts.help
    puts
    puts "See https://shopify.github.io/ruby-lsp/ for more information"
    exit(0)
  end
end

begin
  parser.parse!
rescue OptionParser::InvalidOption => e
  warn(e)
  warn("")
  warn(parser.help)
  exit(1)
end

if options[:debug]
  if ["x64-mingw-ucrt", "x64-mingw32"].include?(RUBY_PLATFORM)
    puts "Debugging is not supported on Windows"
    exit 1
  end

  sockets_dir = "/tmp/ruby-lsp-debug-sockets"
  Dir.mkdir(sockets_dir) unless Dir.exist?(sockets_dir)
  # ruby-debug-ENV["USER"] is an implicit naming pattern in ruby/debug
  # if it's not present, rdbg will not find the socket
  socket_identifier = "ruby-debug-#{ENV["USER"]}-#{File.basename(Dir.pwd)}.sock"
  ENV["RUBY_DEBUG_SOCK_PATH"] = "#{sockets_dir}/#{socket_identifier}"

  begin
    require "debug/open_nonstop"
  rescue LoadError
    warn("You need to install the debug gem to use the --debug flag")
  end
end

RubyLsp::Server.new.start
